import os
from PyQt6.QtGui import QIcon
from ..otsconfig import config


def load_config(self):
    # Hide Popups
    self.group_search_items.hide()
    self.group_download_items.hide()
    # Icons
    en_US_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'en_US.png'))
    self.inp_language.insertItem(0, en_US_icon, "English")
    de_DE_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'de_DE.png'))
    self.inp_language.insertItem(1, de_DE_icon, "Deutsch")
    pt_PT_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'pt_PT.png'))
    self.inp_language.insertItem(2, pt_PT_icon, "PortuguÃªs")

    pirate_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'pirate_flag.png'))
    self.inp_language.insertItem(999, pirate_icon, "Contribute")
    self.inp_language.currentIndexChanged.connect(self.contribute)

    deezer_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'deezer.png'))
    self.inp_login_service.insertItem(0, deezer_icon, "")
    #self.btn_login_add_soundcloud.setIcon(soundcloud_icon)

    soundcloud_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'soundcloud.png'))
    self.inp_login_service.insertItem(1, soundcloud_icon, "")
    #self.btn_login_add_soundcloud.setIcon(soundcloud_icon)

    spotify_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'spotify.png'))
    self.inp_login_service.insertItem(2, spotify_icon, "")
    #self.btn_login_add_spotify.setIcon(spotify_icon)

    self.inp_login_service.setCurrentIndex(2)

    save_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'save.png'))
    self.btn_save_config.setIcon(save_icon)
    folder_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'folder.png'))
    self.btn_download_root_browse.setIcon(folder_icon)
    self.btn_download_tmp_browse.setIcon(folder_icon)
    search_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'search.png'))
    self.btn_search.setIcon(search_icon)
    collapse_down_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'collapse_down.png'))
    collapse_up_icon = QIcon(os.path.join(config.app_root, 'resources', 'icons', 'collapse_up.png'))
    self.btn_search_filter_toggle.setIcon(collapse_down_icon)
    self.btn_download_filter_toggle.setIcon(collapse_up_icon)

    # Text
    self.inp_language.setCurrentIndex(config.get("language_index"))
    self.inp_explicit_label.setText(config.get("explicit_label"))
    self.inp_file_bitrate.setText(config.get("file_bitrate"))
    self.inp_download_root.setText(config.get("download_root"))
    self.inp_download_delay.setValue(config.get("download_delay"))
    self.inp_max_search_results.setValue(config.get("max_search_results"))
    self.inp_max_retries.setValue(config.get("max_retries"))
    self.inp_chunk_size.setValue(config.get("chunk_size"))
    self.inp_media_format.setText(config.get("media_format"))
    self.inp_podcast_media_format.setText(config.get("podcast_media_format"))
    self.inp_illegal_character_replacement.setText(config.get("illegal_character_replacement"))
    self.inp_track_formatter.setText(config.get("track_path_formatter"))
    self.inp_podcast_path_formatter.setText(config.get("podcast_path_formatter"))
    self.inp_playlist_path_formatter.setText(config.get("playlist_path_formatter"))
    self.inp_m3u_name_formatter.setText(config.get("m3u_name_formatter"))
    self.inp_album_cover_format.setText(config.get("album_cover_format"))
    self.inp_max_recdl_delay.setValue(config.get("recoverable_fail_wait_delay"))
    self.inp_search_thumb_height.setValue(config.get("search_thumb_height"))
    self.inp_metadata_seperator.setText(config.get("metadata_seperator"))


    # Checkboxes
    self.inp_show_download_thumbnails.setChecked(config.get("show_search_thumbnails"))
    self.inp_show_search_thumbnails.setChecked(config.get("show_search_thumbnails"))
    self.inp_use_lrc_file.setChecked(config.get("use_lrc_file"))
    self.inp_rotate_acc_sn.setChecked(config.get("rotate_acc_sn"))
    self.inp_download_copy_btn.setChecked(config.get("download_copy_btn"))
    self.inp_download_open_btn.setChecked(config.get("download_open_btn"))
    self.inp_download_locate_btn.setChecked(config.get("download_locate_btn"))
    self.inp_download_delete_btn.setChecked(config.get("download_delete_btn"))
    self.inp_translate_file_path.setChecked(config.get("translate_file_path"))
    self.inp_raw_download.setChecked(config.get("force_raw"))
    self.inp_disable_bulk_popup.setChecked(config.get("disable_bulk_dl_notices"))
    self.inp_save_album_cover.setChecked(config.get("save_album_cover"))
    self.inp_enable_lyrics.setChecked(config.get("inp_enable_lyrics"))
    self.inp_only_synced_lyrics.setChecked(config.get("only_synced_lyrics"))
    self.inp_use_playlist_path.setChecked(config.get("use_playlist_path"))
    self.inp_create_playlists.setChecked(config.get("create_m3u_playlists"))
    self.inp_check_for_updates.setChecked(config.get("check_for_updates"))
    self.inp_embed_cover.setChecked(config.get("embed_cover"))
    self.inp_embed_branding.setChecked(config.get("embed_branding"))
    self.inp_embed_artist.setChecked(config.get("embed_artist"))
    self.inp_embed_album.setChecked(config.get('embed_album'))
    self.inp_embed_albumartist.setChecked(config.get('embed_albumartist'))
    self.inp_embed_name.setChecked(config.get('embed_name'))
    self.inp_embed_year.setChecked(config.get('embed_year'))
    self.inp_embed_discnumber.setChecked(config.get('embed_discnumber'))
    self.inp_embed_tracknumber.setChecked(config.get('embed_tracknumber'))
    self.inp_embed_genre.setChecked(config.get('embed_genre'))
    self.inp_embed_performers.setChecked(config.get('embed_performers'))
    self.inp_embed_producers.setChecked(config.get('embed_producers'))
    self.inp_embed_writers.setChecked(config.get('embed_writers'))
    self.inp_embed_label.setChecked(config.get('embed_label'))
    self.inp_embed_copyright.setChecked(config.get('embed_copyright'))
    self.inp_embed_description.setChecked(config.get('embed_description'))
    self.inp_embed_language.setChecked(config.get('embed_language'))
    self.inp_embed_isrc.setChecked(config.get('embed_isrc'))
    self.inp_embed_length.setChecked(config.get('embed_length'))
    self.inp_embed_key.setChecked(config.get('embed_key'))
    self.inp_embed_bpm.setChecked(config.get('embed_bpm'))
    self.inp_embed_url.setChecked(config.get('embed_url'))
    self.inp_embed_lyrics.setChecked(config.get('embed_lyrics'))
    self.inp_embed_explicit.setChecked(config.get('embed_explicit'))
    self.inp_embed_compilation.setChecked(config.get('embed_compilation'))
    self.inp_embed_timesignature.setChecked(config.get('embed_timesignature'))
    self.inp_embed_acousticness.setChecked(config.get('embed_acousticness'))
    self.inp_embed_danceability.setChecked(config.get('embed_danceability'))
    self.inp_embed_energy.setChecked(config.get('embed_energy'))
    self.inp_embed_instrumentalness.setChecked(config.get('embed_instrumentalness'))
    self.inp_embed_liveness.setChecked(config.get('embed_liveness'))
    self.inp_embed_loudness.setChecked(config.get('embed_loudness'))
    self.inp_embed_speechiness.setChecked(config.get('embed_speechiness'))
    self.inp_embed_valence.setChecked(config.get('embed_valence'))

def save_config(self):
    # Missing Theme
    config.set_('language_index', self.inp_language.currentIndex())
    config.set_('explicit_label', self.inp_explicit_label.text())
    config.set_('download_root', self.inp_download_root.text())
    config.set_('file_bitrate', self.inp_file_bitrate.text())
    config.set_('track_path_formatter', self.inp_track_formatter.text())
    config.set_('podcast_path_formatter', self.inp_podcast_path_formatter.text())
    config.set_('playlist_path_formatter', self.inp_playlist_path_formatter.text())
    config.set_('m3u_name_formatter', self.inp_m3u_name_formatter.text())
    config.set_('album_cover_format', self.inp_album_cover_format.text())
    config.set_('download_delay', self.inp_download_delay.value())
    config.set_('chunk_size', self.inp_chunk_size.value())
    config.set_('recoverable_fail_wait_delay', self.inp_max_recdl_delay.value())
    config.set_('search_thumb_height', self.inp_search_thumb_height.value())
    config.set_('max_retries', self.inp_max_retries.value())
    config.set_('disable_bulk_dl_notices', self.inp_disable_bulk_popup.isChecked())
    config.set_('metadata_seperator', self.inp_metadata_seperator.text())
    if 0 < self.inp_max_search_results.value() <= 50:
        config.set_('max_search_results', self.inp_max_search_results.value())
    else:
            config.set_('max_search_results', 5)
    config.set_('media_format', self.inp_media_format.text())
    config.set_('podcast_media_format', self.inp_podcast_media_format.text())
    config.set_('illegal_character_replacement', self.inp_illegal_character_replacement.text())


    # Checkboxes: config.set_('key', bool)
    config.set_('show_download_thumbnails', self.inp_show_search_thumbnails.isChecked())
    config.set_('show_search_thumbnails', self.inp_show_search_thumbnails.isChecked())
    config.set_('use_lrc_file', self.inp_use_lrc_file.isChecked())
    config.set_('rotate_acc_sn', self.inp_rotate_acc_sn.isChecked())
    config.set_('translate_file_path', self.inp_translate_file_path.isChecked())
    config.set_('force_raw', self.inp_raw_download.isChecked())
    config.set_('download_copy_btn', self.inp_download_copy_btn.isChecked())
    config.set_('download_open_btn', self.inp_download_open_btn.isChecked())
    config.set_('download_locate_btn', self.inp_download_locate_btn.isChecked())
    config.set_('download_delete_btn', self.inp_download_delete_btn.isChecked())
    config.set_('save_album_cover', self.inp_save_album_cover.isChecked())
    config.set_('inp_enable_lyrics', self.inp_enable_lyrics.isChecked())
    config.set_('only_synced_lyrics', self.inp_only_synced_lyrics.isChecked())
    config.set_('use_playlist_path', self.inp_use_playlist_path.isChecked())
    config.set_('create_m3u_playlists', self.inp_create_playlists.isChecked())
    config.set_('check_for_updates', self.inp_check_for_updates.isChecked())
    config.set_('embed_cover', self.inp_embed_cover.isChecked())
    config.set_('embed_branding', self.inp_embed_branding.isChecked())
    config.set_('embed_artist', self.inp_embed_artist.isChecked())
    config.set_('embed_album', self.inp_embed_album.isChecked())
    config.set_('embed_albumartist', self.inp_embed_albumartist.isChecked())
    config.set_('embed_name', self.inp_embed_name.isChecked())
    config.set_('embed_year', self.inp_embed_year.isChecked())
    config.set_('embed_discnumber', self.inp_embed_discnumber.isChecked())
    config.set_('embed_tracknumber', self.inp_embed_tracknumber.isChecked())
    config.set_('embed_genre', self.inp_embed_genre.isChecked())
    config.set_('embed_performers', self.inp_embed_performers.isChecked())
    config.set_('embed_producers', self.inp_embed_producers.isChecked())
    config.set_('embed_writers', self.inp_embed_writers.isChecked())
    config.set_('embed_label', self.inp_embed_label.isChecked())
    config.set_('embed_copyright', self.inp_embed_copyright.isChecked())
    config.set_('embed_description', self.inp_embed_description.isChecked())
    config.set_('embed_language', self.inp_embed_language.isChecked())
    config.set_('embed_isrc', self.inp_embed_isrc.isChecked())
    config.set_('embed_length', self.inp_embed_length.isChecked())
    config.set_('embed_key', self.inp_embed_key.isChecked())
    config.set_('embed_bpm', self.inp_embed_bpm.isChecked())
    config.set_('embed_url', self.inp_embed_url.isChecked())
    config.set_('embed_lyrics', self.inp_embed_lyrics.isChecked())
    config.set_('embed_explicit', self.inp_embed_explicit.isChecked())
    config.set_('embed_compilation', self.inp_embed_compilation.isChecked())
    config.set_('embed_timesignature', self.inp_embed_timesignature.isChecked())
    config.set_('embed_acousticness', self.inp_embed_acousticness.isChecked())
    config.set_('embed_danceability', self.inp_embed_danceability.isChecked())
    config.set_('embed_energy', self.inp_embed_energy.isChecked())
    config.set_('embed_instrumentalness', self.inp_embed_instrumentalness.isChecked())
    config.set_('embed_liveness', self.inp_embed_liveness.isChecked())
    config.set_('embed_loudness', self.inp_embed_loudness.isChecked())
    config.set_('embed_speechiness', self.inp_embed_speechiness.isChecked())
    config.set_('embed_valence', self.inp_embed_valence.isChecked())
    config.update()
